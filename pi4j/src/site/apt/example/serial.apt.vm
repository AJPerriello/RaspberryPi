            ------
            RS232/Serial Example
            ------
            ------
             YYYY-MM-DD
            ------

Serial Communication Example using Pi4J.

  The following example demonstrates how to transmit and receive data using the Raspberry Pi serial port.
  \
  (A complete article on building and installing a serial port on the Raspberry Pi is available here:\ 
  {{http://www.savagehomeautomation.com/projects/raspberry-pi-installing-a-rs232-serial-port.html}})

* Prerequisites 

  By default, the serial port on the Raspberry Pi is configured as a console port for communicating with the Linux OS shell.  
  If you want to use the serial port in a software program, you must disable the OS from using this port.  
  Please see this blog article by  Clayton Smith for step-by-step instructions on how to disable the OS console for this port: 
  {{http://www.irrational.net/2012/04/19/using-the-raspberry-pis-serial-port/}}

* Source Code 
   
  The source code for this example is included in the github repository:\
  {{https://github.com/Pi4J/pi4j/tree/master/pi4j-example/src/main/java/SerialExample.java}}

%{snippet|id=serial-snippet|file=pi4j-example/src/main/java/SerialExample.java}

* JavaDoc

  The following JavaDoc links are the primary interfaces used to communicate via the Pi's serial ports:

  * {{{../apidocs/index.html?com/pi4j/io/serial/SerialFactory.html}com.pi4j.io.serial.SerialFactory}}

  * {{{../apidocs/index.html?com/pi4j/io/serial/Serial.html}com.pi4j.io.serial.Serial}}
  
  * {{{../apidocs/index.html?com/pi4j/io/serial/SerialDataEvent.html}com.pi4j.io.serial.SerialDataEvent}}

  * {{{../apidocs/index.html?com/pi4j/io/serial/SerialDataListener.html}com.pi4j.io.serial.SerialDataListener}}
  

* Wiring Diagram

  The circuit below illustrates a RS232 serial port connected to the Raspberry Pi's GPIO header.\
  The following circuit can be used in conjunction with this sample code.\
  \
  (A complete article on building and installing a serial port on the Raspberry Pi is available here:\ 
  {{http://www.savagehomeautomation.com/projects/raspberry-pi-installing-a-rs232-serial-port.html}})
  
[../images/serial-example.png]

  {{{../images/serial-example-large.png}(click here for hi-resolution image)}}

* Navigate

  If you have not already downloaded and installed the Pi4J library on the RaspberryPi, then view this page for instructions on where to download and how to install Pi4J: \
  {{{../install.html}Download & Install Pi4J}}
  
  
  First, locate the <SerialExample.java> source file in the samples folder of the Pi4J installation on the RaspberryPi. \
  You can use the following command on the Pi's console or SSH terminal to navigate to this path: \
  <<<cd /opt/pi4j/examples>>>

* Compile
  
  Next, use the following command to compile this example program:
  
  <<<javac -classpath .:classes:/opt/pi4j/lib/'*' -d . SerialExample.java>>>
  
* Execute
  
  The following command will run this example program:
  
  <<<sudo java -classpath .:classes:/opt/pi4j/lib/'*' SerialExample>>>
  
* Output

  To test this program you will need to connect your computer via serial cable and use a serial communications tool such as Hyperterminal or Indigo Terminal Emulator.  
  Establish a connection using baud rate 34800 with parity set to NONE, data bits to 8 and stop bits to 1. (38400,N,8,1)  
  Once connected you should see the following data displayed in the terminal software:
  
  <<<
  CURRENT TIME: <Date/Time>\
  Second Line\
  Third Line\
  >>>  

  This data should be repeated every second.

[../images/serial-screenshot.png]
  \
  You can also submit data from the terminal software and that data should be displayed on the Raspberry Pi's console. 