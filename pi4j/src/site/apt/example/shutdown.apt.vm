            ------
            Shutdown Example
            ------
            ------
             YYYY-MM-DD
            ------

GPIO Shutdown using Pi4J.

  If is highly likely that your program should return the GPIO pins states to a known fixed state any time the user application is exited.  
  The following example demonstrates how to configure the shutdown behavior that will be applied to the GPIO pins when the Java application terminates.

* Source Code
  
  The source code for this example is included in the github repository:\
  {{https://github.com/Pi4J/pi4j/tree/master/pi4j-example/src/main/java/ShutdownGpioExample.java}}

%{snippet|id=shutdown-gpio-snippet|file=pi4j-example/src/main/java/ShutdownGpioExample.java}

* JavaDoc

  The following JavaDoc links are the primary interfaces used to perform automated shutdown for the Pi's GPIO pins:

  * {{{../apidocs/index.html?com/pi4j/io/gpio/GpioFactory.html}com.pi4j.io.gpio.GpioFactory}}
  
  * {{{../apidocs/index.html?com/pi4j/io/gpio/Gpio.html}com.pi4j.io.gpio.Gpio}}
  
  * {{{../apidocs/index.html?com/pi4j/io/gpio/GpioPin.html}com.pi4j.io.gpio.GpioPin}}

  * {{{../apidocs/index.html?com/pi4j/io/gpio/PinEdge.html}com.pi4j.io.gpio.PinEdge}}

  * {{{../apidocs/index.html?com/pi4j/io/gpio/PinState.html}com.pi4j.io.gpio.PinState}}

* Wiring Diagram

  The following circuit can be used in conjunction with this sample code.
  
[../images/gpio-control-example.png]

  {{{../images/gpio-control-example-large.png}(click here for hi-resolution image)}}

* Navigate

  If you have not already downloaded and installed the Pi4J library on the RaspberryPi, then view this page for instructions on where to download and how to install Pi4J: \
  {{{../install.html}Download & Install Pi4J}}
  
  
  First, locate the <ShutdownGpioExample.java> source file in the samples folder of the Pi4J installation on the RaspberryPi. \
  You can use the following command on the Pi's console or SSH terminal to navigate to this path: \
  <<<cd /opt/pi4j/examples>>>

* Compile
  
  Next, use the following command to compile this example program:
  
  <<<javac -classpath .:classes:/opt/pi4j/lib/'*' -d . ShutdownGpioExample.java>>>
  
* Execute
  
  The following command will run this example program:
  
  <<<sudo java -classpath .:classes:/opt/pi4j/lib/'*' ShutdownGpioExample>>>
  
* Output

  You should see the attached LED perform as follows:
  
[../images/pinon.png] 
  
  Turn ON

[../images/pinoff.png] 
  
  Turn OFF after 10 seconds when the program automatically exists.\
  Turn OFF if the user terminates the program using CTRL-C prior to the 10 second timeout. 
